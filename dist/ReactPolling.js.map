{"version":3,"sources":["webpack://ReactPolling/webpack/universalModuleDefinition","webpack://ReactPolling/webpack/bootstrap","webpack://ReactPolling/external \"prop-types\"","webpack://ReactPolling/external \"react\"","webpack://ReactPolling/./src/ReactPolling.js","webpack://ReactPolling/./src/index.js"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ReactPolling","_React$Component","props","_this2","this","state","isPolling","initConfig","_inheritsLoose","_proto","options","url","interval","retryCount","onSuccess","onFailure","api","_objectWithoutPropertiesLoose","Number","config","shouldRetry","stopPolling","_ismounted","poll","clearTimeout","setState","startPolling","Error","runPolling","_this$config","_this","setTimeout","fetch","then","resp","json","data","ok","Promise","reject","status","continuePolling","catch","error","componentDidMount","render","children","componentWillUnmount","React","Component","propTypes","PropTypes","string","number","func","isRequired","headers","method","body","defaultProps"],"mappings":"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","file":"ReactPolling.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"prop-types\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"prop-types\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactPolling\"] = factory(require(\"prop-types\"), require(\"react\"));\n\telse\n\t\troot[\"ReactPolling\"] = factory(root[\"prop-types\"], root[\"react\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n<ReactPolling \n  url={'url to poll'}\n  interval= {3000} // in milliseconds(ms)\n  retryCount={3} // this is optional\n  onSuccess={() => console.log('handle success')}\n  onFailure={() => console.log('handle failure')} // this is optional\n  method={'GET'}\n  headers={headers object} // this is optional\n  body={JSON.stringify(data)} // data to send in a post call. Should be stringified always\n  render={({ startPolling, stopPolling, isPolling }) => {\n    if(isPolling) {\n      return (\n        <div> Hello I am polling</div>\n          <Spinner />\n        </div>\n      );\n    } else {\n      return (\n        <div> Hello I stopped polling</div>\n        </div>\n      );\n    }\n  }}\n/>\n*/\n\nexport class ReactPolling extends React.Component {\n  /**\n   * Initial config for setting up the polling service\n   * @param {Object} options\n   * For example:-\n   * options = {\n   *  url: 'api that we need to poll',\n   *  interval: interval for polling\n   *  retryCount: the no of times to retry when the api call fails\n   *  -----------------------------------------\n   *  onSuccess: what should happen on a successful response. This should either return a true to continue polling\n   *  or false to stop polling\n   *  -----------------------------------------\n   *  onFailure: what should happen on a failure response, we can either garbage collect some variables. This is optional\n   *  -----------------------------------------\n   *  method: 'GET',\n   *  headers: {\n   *    Content-Type: 'application/json'\n   *  },\n   *  body: JSON.stringify(data) // in case of a post call\n   * }\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      isPolling: false\n    };\n    this.initConfig(props);\n  }\n  /**\n   * Function to setup the config object with default config or the config provided by the user\n   * @param {Object} options\n   */\n  initConfig(options) {\n    let { url, interval, retryCount, onSuccess, onFailure, ...api } = options;\n    interval = Number(interval);\n    retryCount = Number(retryCount);\n    this.config = {\n      url,\n      interval,\n      shouldRetry: retryCount ? true : false,\n      retryCount: retryCount,\n      onSuccess,\n      onFailure,\n      api\n    };\n  }\n  /**\n   * To be called by the user of this service or when the poll api fails.\n   * It will set the isPolling to false and stop the timer\n   */\n  stopPolling() {\n    if (this._ismounted) {\n      const isPolling = false;\n      if (this.poll) {\n        clearTimeout(this.poll);\n        this.poll = null;\n      }\n      this.setState({\n        isPolling\n      });\n    }\n  }\n  /**\n   * To be called manually by the user of this service.\n   * This will call runPolling and start polling our api\n   */\n  startPolling() {\n    // if no url specified, throw an error\n    if (!this.config.url) {\n      throw new Error('No url provided to poll. Please provide a config object with the url param set');\n    }\n    // set isPolling to true\n    this.setState({\n      isPolling: true\n    });\n    // call runPolling, which will start timer and call our api\n    this.runPolling();\n  }\n  /**\n   * start a timer with the interval specified by the user || default interval\n   * we are using setTimeout and not setinterval because a slow back end server might take more time than our interval time and that would lead to\n   * a queue of ajax requests with no response at all.\n   * -----------------------------------------\n   * This function would call the api first time and only on the success response of the api we would poll again after the interval\n   */\n  runPolling() {\n    const { url, interval, onSuccess, onFailure, api } = this.config;\n\n    const _this = this;\n    this.poll = setTimeout(() => {\n      /* onSuccess would be handled by the user of service which would either return true or false\n      * true - This means we need to continue polling\n      * false - This means we need to stop polling\n      */\n      fetch(url, api)\n        .then(resp => {\n          return resp.json().then(data => {\n            if (resp.ok) {\n              return data;\n            } else {\n              return Promise.reject({ status: resp.status, data });\n            }\n          });\n        })\n        .then(onSuccess)\n        .then(continuePolling => {\n          _this.state.isPolling && continuePolling ? _this.runPolling() : _this.stopPolling();\n        })\n        .catch(error => {\n          if (_this.config.shouldRetry && _this.config.retryCount > 0) {\n            onFailure && onFailure(error);\n            _this.config.retryCount--;\n            _this.runPolling();\n          } else {\n            onFailure && onFailure(error);\n            _this.stopPolling();\n          }\n        });\n    }, interval);\n  }\n  componentDidMount() {\n    // set _isMounted to true to check if our component is still mounted or the user re-directed to some other page\n    this._ismounted = true;\n    this.startPolling();\n  }\n  render() {\n    if (this.props.render) {\n      return this.props.render({\n        startPolling: this.startPolling,\n        stopPolling: this.stopPolling,\n        isPolling: this.state.isPolling\n      });\n    }\n    return this.props.children({\n      startPolling: this.startPolling,\n      stopPolling: this.stopPolling,\n      isPolling: this.state.isPolling\n    });\n  }\n  componentWillUnmount() {\n    this.stopPolling();\n    // set _isMounted to false so that we do no call setState on an unmouted component\n    this._ismounted = false;\n  }\n}\n\n// prop types check for dev environment\nReactPolling.propTypes = {\n  url: PropTypes.string,\n  interval: PropTypes.number,\n  retryCount: PropTypes.number,\n  onSuccess: PropTypes.func.isRequired,\n  onFailure: PropTypes.func,\n  headers: PropTypes.object,\n  method: PropTypes.string,\n  body: PropTypes.object,\n  render: PropTypes.func,\n  children: PropTypes.func\n};\n\n// default props\nReactPolling.defaultProps = {\n  interval: 3000,\n  retryCount: 0,\n  onFailure: () => {},\n  method: 'GET'\n};\n\nexport default ReactPolling;\n","import ReactPolling from './ReactPolling';\nexport default ReactPolling;\n"],"sourceRoot":""}